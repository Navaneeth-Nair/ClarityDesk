{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProductivityStats=_ref=>{let{stats,userId,onStatsUpdate}=_ref;const[dailyStats,setDailyStats]=useState([]);const[trends,setTrends]=useState([]);const[focusStats,setFocusStats]=useState([]);useEffect(()=>{fetchDailyStats();fetchTrends();fetchFocusStats();},[userId]);const fetchDailyStats=async()=>{try{const response=await fetch(\"/api/stats?userId=\".concat(userId,\"&startDate=\").concat(getDateDaysAgo(7)));const data=await response.json();setDailyStats(data.dailyStats||[]);}catch(error){console.error('Error fetching daily stats:',error);}};const fetchTrends=async()=>{try{const response=await fetch(\"/api/stats/trends?userId=\".concat(userId,\"&days=7\"));const data=await response.json();setTrends(data.trends||[]);}catch(error){console.error('Error fetching trends:',error);}};const fetchFocusStats=async()=>{try{const response=await fetch(\"/api/stats/focus?userId=\".concat(userId));const data=await response.json();setFocusStats(data.focusStats||[]);}catch(error){console.error('Error fetching focus stats:',error);}};const getDateDaysAgo=days=>{const date=new Date();date.setDate(date.getDate()-days);return date.toISOString().split('T')[0];};const getTodayStats=()=>{const today=new Date().toISOString().split('T')[0];return dailyStats.find(stat=>stat.date===today)||{tasks_completed:0};};const getWeekTotal=()=>{return dailyStats.reduce((total,day)=>total+(day.tasks_completed||0),0);};const getStreakCount=()=>{let streak=0;const sortedStats=[...dailyStats].sort((a,b)=>new Date(b.date)-new Date(a.date));for(const stat of sortedStats){if(stat.tasks_completed>0){streak++;}else{break;}}return streak;};const getTotalFocusTime=()=>{return focusStats.reduce((total,session)=>total+(session.total_focus_time||0),0);};const getProductivityTrend=()=>{if(trends.length<2)return'stable';const recent=trends.slice(-3).reduce((sum,day)=>sum+day.tasks_completed,0);const previous=trends.slice(-6,-3).reduce((sum,day)=>sum+day.tasks_completed,0);if(recent>previous)return'up';if(recent<previous)return'down';return'stable';};const todayStats=getTodayStats();const weekTotal=getWeekTotal();const streak=getStreakCount();const totalFocusHours=Math.round(getTotalFocusTime()/60);const trend=getProductivityTrend();return/*#__PURE__*/_jsxs(\"div\",{className:\"card card-medium\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCCA Productivity Insights\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:todayStats.tasks_completed}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Today's Tasks\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:weekTotal}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"This Week\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-number\",children:streak}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Day Streak\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-number\",children:[stats.productivityRate||0,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Completion Rate\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'1.5rem'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCC8 Recent Performance\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:'1rem',marginBottom:'1rem'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:'1rem',background:'#f8f9fa',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center',gap:'0.5rem',marginBottom:'0.5rem'},children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCC5 Weekly Overview\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'1.2rem',fontWeight:'600',color:'#333'},children:[weekTotal,\" tasks completed\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.9rem',color:'#666'},children:[\"Average: \",Math.round(weekTotal/7),\" per day\"]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:'1rem',background:'#f8f9fa',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center',gap:'0.5rem',marginBottom:'0.5rem'},children:/*#__PURE__*/_jsx(\"span\",{children:\"\\u23F1\\uFE0F Focus Time\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'1.2rem',fontWeight:'600',color:'#333'},children:[totalFocusHours,\"h total\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.9rem',color:'#666'},children:[stats.avgFocusTime||0,\" min average\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{padding:'1rem',background:'#f0f8ff',borderRadius:'8px',border:'1px solid #e3f2fd'},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Productivity Trend\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.9rem',color:'#666',marginTop:'0.25rem'},children:\"Based on last 7 days\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'1.5rem'},children:trend==='up'?'📈 Improving':trend==='down'?'📉 Declining':'📊 Stable'})]})}),dailyStats.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'1rem'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{marginBottom:'0.5rem'},children:\"\\uD83D\\uDCC5 Daily Breakdown\"}),/*#__PURE__*/_jsx(\"div\",{style:{background:'#f8f9fa',borderRadius:'8px',padding:'1rem'},children:dailyStats.slice(0,7).map(day=>/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',padding:'0.5rem 0',borderBottom:'1px solid #eee'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'0.9rem'},children:new Date(day.date).toLocaleDateString('en-US',{weekday:'short',month:'short',day:'numeric'})}),/*#__PURE__*/_jsxs(\"span\",{style:{fontWeight:'600',color:day.tasks_completed>0?'#4caf50':'#999'},children:[day.tasks_completed,\" tasks\"]})]},day.date))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'1rem',padding:'1rem',background:'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',color:'white',borderRadius:'8px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:'600',marginBottom:'0.5rem'},children:streak>0?\"\\uD83D\\uDD25 \".concat(streak,\" day streak!\"):'🎯 Start your streak today!'}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.9rem',opacity:0.9},children:streak>=7?'Amazing consistency! Keep it up!':streak>=3?'Great momentum! You\\'re on fire!':streak>=1?'Good start! Build that habit!':'Complete a task today to start your streak!'})]})]})]});};export default ProductivityStats;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ProductivityStats","_ref","stats","userId","onStatsUpdate","dailyStats","setDailyStats","trends","setTrends","focusStats","setFocusStats","fetchDailyStats","fetchTrends","fetchFocusStats","response","fetch","concat","getDateDaysAgo","data","json","error","console","days","date","Date","setDate","getDate","toISOString","split","getTodayStats","today","find","stat","tasks_completed","getWeekTotal","reduce","total","day","getStreakCount","streak","sortedStats","sort","a","b","getTotalFocusTime","session","total_focus_time","getProductivityTrend","length","recent","slice","sum","previous","todayStats","weekTotal","totalFocusHours","Math","round","trend","className","children","productivityRate","style","marginTop","display","gridTemplateColumns","gap","marginBottom","padding","background","borderRadius","alignItems","fontSize","fontWeight","color","avgFocusTime","border","justifyContent","map","borderBottom","toLocaleDateString","weekday","month","opacity"],"sources":["C:/Development/codefest2k25hackathon/frontend/src/components/ProductivityStats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ProductivityStats = ({ stats, userId, onStatsUpdate }) => {\r\n  const [dailyStats, setDailyStats] = useState([]);\r\n  const [trends, setTrends] = useState([]);\r\n  const [focusStats, setFocusStats] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchDailyStats();\r\n    fetchTrends();\r\n    fetchFocusStats();\r\n  }, [userId]);\r\n\r\n  const fetchDailyStats = async () => {\r\n    try {\r\n      const response = await fetch(`/api/stats?userId=${userId}&startDate=${getDateDaysAgo(7)}`);\r\n      const data = await response.json();\r\n      setDailyStats(data.dailyStats || []);\r\n    } catch (error) {\r\n      console.error('Error fetching daily stats:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTrends = async () => {\r\n    try {\r\n      const response = await fetch(`/api/stats/trends?userId=${userId}&days=7`);\r\n      const data = await response.json();\r\n      setTrends(data.trends || []);\r\n    } catch (error) {\r\n      console.error('Error fetching trends:', error);\r\n    }\r\n  };\r\n\r\n  const fetchFocusStats = async () => {\r\n    try {\r\n      const response = await fetch(`/api/stats/focus?userId=${userId}`);\r\n      const data = await response.json();\r\n      setFocusStats(data.focusStats || []);\r\n    } catch (error) {\r\n      console.error('Error fetching focus stats:', error);\r\n    }\r\n  };\r\n\r\n  const getDateDaysAgo = (days) => {\r\n    const date = new Date();\r\n    date.setDate(date.getDate() - days);\r\n    return date.toISOString().split('T')[0];\r\n  };\r\n\r\n  const getTodayStats = () => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    return dailyStats.find(stat => stat.date === today) || { tasks_completed: 0 };\r\n  };\r\n\r\n  const getWeekTotal = () => {\r\n    return dailyStats.reduce((total, day) => total + (day.tasks_completed || 0), 0);\r\n  };\r\n\r\n  const getStreakCount = () => {\r\n    let streak = 0;\r\n    const sortedStats = [...dailyStats].sort((a, b) => new Date(b.date) - new Date(a.date));\r\n    \r\n    for (const stat of sortedStats) {\r\n      if (stat.tasks_completed > 0) {\r\n        streak++;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return streak;\r\n  };\r\n\r\n  const getTotalFocusTime = () => {\r\n    return focusStats.reduce((total, session) => total + (session.total_focus_time || 0), 0);\r\n  };\r\n\r\n  const getProductivityTrend = () => {\r\n    if (trends.length < 2) return 'stable';\r\n    const recent = trends.slice(-3).reduce((sum, day) => sum + day.tasks_completed, 0);\r\n    const previous = trends.slice(-6, -3).reduce((sum, day) => sum + day.tasks_completed, 0);\r\n    \r\n    if (recent > previous) return 'up';\r\n    if (recent < previous) return 'down';\r\n    return 'stable';\r\n  };\r\n\r\n  const todayStats = getTodayStats();\r\n  const weekTotal = getWeekTotal();\r\n  const streak = getStreakCount();\r\n  const totalFocusHours = Math.round(getTotalFocusTime() / 60);\r\n  const trend = getProductivityTrend();\r\n\r\n  return (\r\n    <div className=\"card card-medium\">\r\n      <h2>📊 Productivity Insights</h2>\r\n      \r\n      <div className=\"stats-grid\">\r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-number\">{todayStats.tasks_completed}</div>\r\n          <div className=\"stat-label\">Today's Tasks</div>\r\n        </div>\r\n        \r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-number\">{weekTotal}</div>\r\n          <div className=\"stat-label\">This Week</div>\r\n        </div>\r\n        \r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-number\">{streak}</div>\r\n          <div className=\"stat-label\">Day Streak</div>\r\n        </div>\r\n        \r\n        <div className=\"stat-card\">\r\n          <div className=\"stat-number\">{stats.productivityRate || 0}%</div>\r\n          <div className=\"stat-label\">Completion Rate</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={{ marginTop: '1.5rem' }}>\r\n        <h3>📈 Recent Performance</h3>\r\n        \r\n        <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '1rem', marginBottom: '1rem' }}>\r\n          <div style={{ padding: '1rem', background: '#f8f9fa', borderRadius: '8px' }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.5rem' }}>\r\n              <span>📅 Weekly Overview</span>\r\n            </div>\r\n            <div style={{ fontSize: '1.2rem', fontWeight: '600', color: '#333' }}>\r\n              {weekTotal} tasks completed\r\n            </div>\r\n            <div style={{ fontSize: '0.9rem', color: '#666' }}>\r\n              Average: {Math.round(weekTotal / 7)} per day\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ padding: '1rem', background: '#f8f9fa', borderRadius: '8px' }}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '0.5rem', marginBottom: '0.5rem' }}>\r\n              <span>⏱️ Focus Time</span>\r\n            </div>\r\n            <div style={{ fontSize: '1.2rem', fontWeight: '600', color: '#333' }}>\r\n              {totalFocusHours}h total\r\n            </div>\r\n            <div style={{ fontSize: '0.9rem', color: '#666' }}>\r\n              {stats.avgFocusTime || 0} min average\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ padding: '1rem', background: '#f0f8ff', borderRadius: '8px', border: '1px solid #e3f2fd' }}>\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <div>\r\n              <strong>Productivity Trend</strong>\r\n              <div style={{ fontSize: '0.9rem', color: '#666', marginTop: '0.25rem' }}>\r\n                Based on last 7 days\r\n              </div>\r\n            </div>\r\n            <div style={{ fontSize: '1.5rem' }}>\r\n              {trend === 'up' ? '📈 Improving' : trend === 'down' ? '📉 Declining' : '📊 Stable'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Daily Breakdown */}\r\n        {dailyStats.length > 0 && (\r\n          <div style={{ marginTop: '1rem' }}>\r\n            <h4 style={{ marginBottom: '0.5rem' }}>📅 Daily Breakdown</h4>\r\n            <div style={{ background: '#f8f9fa', borderRadius: '8px', padding: '1rem' }}>\r\n              {dailyStats.slice(0, 7).map(day => (\r\n                <div key={day.date} style={{ \r\n                  display: 'flex', \r\n                  justifyContent: 'space-between', \r\n                  padding: '0.5rem 0',\r\n                  borderBottom: '1px solid #eee'\r\n                }}>\r\n                  <span style={{ fontSize: '0.9rem' }}>\r\n                    {new Date(day.date).toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric' })}\r\n                  </span>\r\n                  <span style={{ fontWeight: '600', color: day.tasks_completed > 0 ? '#4caf50' : '#999' }}>\r\n                    {day.tasks_completed} tasks\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Motivational Messages */}\r\n        <div style={{ marginTop: '1rem', padding: '1rem', background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)', color: 'white', borderRadius: '8px' }}>\r\n          <div style={{ fontWeight: '600', marginBottom: '0.5rem' }}>\r\n            {streak > 0 ? `🔥 ${streak} day streak!` : '🎯 Start your streak today!'}\r\n          </div>\r\n          <div style={{ fontSize: '0.9rem', opacity: 0.9 }}>\r\n            {streak >= 7 ? 'Amazing consistency! Keep it up!' :\r\n             streak >= 3 ? 'Great momentum! You\\'re on fire!' :\r\n             streak >= 1 ? 'Good start! Build that habit!' :\r\n             'Complete a task today to start your streak!'}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductivityStats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}