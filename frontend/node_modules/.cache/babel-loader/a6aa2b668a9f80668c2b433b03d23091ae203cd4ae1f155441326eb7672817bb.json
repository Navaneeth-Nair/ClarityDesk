{"ast":null,"code":"var _jsxFileName = \"D:\\\\rakesh project\\\\Code-fest-2025-Hackathon\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Components\nimport TaskManager from './components/TaskManager';\nimport ProductivityStats from './components/ProductivityStats';\nimport FocusTimer from './components/FocusTimer';\nimport CollaborationPanel from './components/CollaborationPanel';\nimport UserLogin from './components/UserLogin';\nimport Header from './components/Header';\n\n// Context\nimport { ThemeProvider } from './contexts/ThemeContext';\n\n// Utils\nimport { notifyUser } from './utils/notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [collaborationMessages, setCollaborationMessages] = useState([]);\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Socket event listeners\n    socket.on('connect', () => {\n      console.log('Connected to server');\n      setLoading(false);\n    });\n    socket.on('user-joined', data => {\n      notifyUser(`${data.username} joined the workspace`, 'success');\n    });\n    socket.on('user-left', data => {\n      notifyUser(`${data.username} left the workspace`, 'info');\n    });\n    socket.on('active-users', users => {\n      setActiveUsers(users);\n    });\n    socket.on('task-created', task => {\n      setTasks(prev => [task, ...prev]);\n      notifyUser(`New task created: ${task.title}`, 'success');\n    });\n    socket.on('task-updated', updatedTask => {\n      setTasks(prev => prev.map(task => task.id === updatedTask.id ? updatedTask : task));\n      if (updatedTask.completed) {\n        notifyUser(`Task completed: ${updatedTask.title}`, 'success');\n      }\n    });\n    socket.on('task-deleted', data => {\n      setTasks(prev => prev.filter(task => task.id !== data.id));\n      notifyUser('Task deleted', 'info');\n    });\n    socket.on('collaboration-message', message => {\n      setCollaborationMessages(prev => [...prev, message]);\n    });\n    socket.on('focus-session-started', data => {\n      notifyUser(`${data.username} started a ${data.duration} minute focus session`, 'info');\n    });\n    socket.on('focus-session-completed', data => {\n      notifyUser(`${data.username} completed their focus session!`, 'success');\n    });\n    socket.on('error', error => {\n      console.error('Socket error:', error);\n      notifyUser(error.message, 'error');\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('user-joined');\n      socket.off('user-left');\n      socket.off('active-users');\n      socket.off('task-created');\n      socket.off('task-updated');\n      socket.off('task-deleted');\n      socket.off('collaboration-message');\n      socket.off('focus-session-started');\n      socket.off('focus-session-completed');\n      socket.off('error');\n    };\n  }, []);\n\n  // Fetch initial data when user logs in\n  useEffect(() => {\n    if (user) {\n      fetchTasks();\n      fetchStats();\n    }\n  }, [user]);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('/api/tasks');\n      const data = await response.json();\n      setTasks(data.tasks || []);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const fetchStats = async () => {\n    try {\n      const response = await fetch(`/api/stats/overview${user ? `?userId=${user.id}` : ''}`);\n      const data = await response.json();\n      setStats(data.overview || {});\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n    }\n  };\n  const handleUserLogin = userData => {\n    setUser(userData);\n    socket.emit('user-join', userData);\n  };\n  const handleUserLogout = () => {\n    setUser(null);\n    setTasks([]);\n    setStats({});\n    setActiveUsers([]);\n    setCollaborationMessages([]);\n  };\n  const handleTaskCreate = taskData => {\n    socket.emit('task-created', {\n      ...taskData,\n      created_by: user.id\n    });\n  };\n  const handleTaskUpdate = taskData => {\n    socket.emit('task-updated', taskData);\n  };\n  const handleTaskDelete = taskId => {\n    socket.emit('task-deleted', taskId);\n  };\n  const handleFocusSessionStart = duration => {\n    socket.emit('focus-session-start', {\n      duration\n    });\n  };\n  const handleFocusSessionComplete = sessionId => {\n    socket.emit('focus-session-complete', {\n      sessionId\n    });\n    fetchStats(); // Refresh stats after focus session\n  };\n  const handleCollaborationMessage = message => {\n    socket.emit('collaboration-message', {\n      message\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connecting to Smart Productivity Dashboard...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(UserLogin, {\n      onLogin: handleUserLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user,\n      activeUsers: activeUsers,\n      onLogout: handleUserLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-column\",\n          children: /*#__PURE__*/_jsxDEV(TaskManager, {\n            tasks: tasks,\n            user: user,\n            activeUsers: activeUsers,\n            onTaskCreate: handleTaskCreate,\n            onTaskUpdate: handleTaskUpdate,\n            onTaskDelete: handleTaskDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center-column\",\n          children: [/*#__PURE__*/_jsxDEV(ProductivityStats, {\n            stats: stats,\n            userId: user.id,\n            onStatsUpdate: fetchStats\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FocusTimer, {\n            onSessionStart: handleFocusSessionStart,\n            onSessionComplete: handleFocusSessionComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column\",\n          children: /*#__PURE__*/_jsxDEV(CollaborationPanel, {\n            messages: collaborationMessages,\n            activeUsers: activeUsers,\n            currentUser: user,\n            onSendMessage: handleCollaborationMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notification-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M3TNdn3E3gts4/RYabR+mhdvDDU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","TaskManager","ProductivityStats","FocusTimer","CollaborationPanel","UserLogin","Header","ThemeProvider","notifyUser","jsxDEV","_jsxDEV","socket","App","_s","user","setUser","tasks","setTasks","activeUsers","setActiveUsers","collaborationMessages","setCollaborationMessages","stats","setStats","loading","setLoading","on","console","log","data","username","users","task","prev","title","updatedTask","map","id","completed","filter","message","duration","error","off","fetchTasks","fetchStats","response","fetch","json","overview","handleUserLogin","userData","emit","handleUserLogout","handleTaskCreate","taskData","created_by","handleTaskUpdate","handleTaskDelete","taskId","handleFocusSessionStart","handleFocusSessionComplete","sessionId","handleCollaborationMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onLogout","onTaskCreate","onTaskUpdate","onTaskDelete","userId","onStatsUpdate","onSessionStart","onSessionComplete","messages","currentUser","onSendMessage","_c","$RefreshReg$"],"sources":["D:/rakesh project/Code-fest-2025-Hackathon/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './App.css';\r\n\r\n// Components\r\nimport TaskManager from './components/TaskManager';\r\nimport ProductivityStats from './components/ProductivityStats';\r\nimport FocusTimer from './components/FocusTimer';\r\nimport CollaborationPanel from './components/CollaborationPanel';\r\nimport UserLogin from './components/UserLogin';\r\nimport Header from './components/Header';\r\n\r\n// Context\r\nimport { ThemeProvider } from './contexts/ThemeContext';\r\n\r\n// Utils\r\nimport { notifyUser } from './utils/notifications';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [collaborationMessages, setCollaborationMessages] = useState([]);\r\n  const [stats, setStats] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Socket event listeners\r\n    socket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      setLoading(false);\r\n    });\r\n\r\n    socket.on('user-joined', (data) => {\r\n      notifyUser(`${data.username} joined the workspace`, 'success');\r\n    });\r\n\r\n    socket.on('user-left', (data) => {\r\n      notifyUser(`${data.username} left the workspace`, 'info');\r\n    });\r\n\r\n    socket.on('active-users', (users) => {\r\n      setActiveUsers(users);\r\n    });\r\n\r\n    socket.on('task-created', (task) => {\r\n      setTasks(prev => [task, ...prev]);\r\n      notifyUser(`New task created: ${task.title}`, 'success');\r\n    });\r\n\r\n    socket.on('task-updated', (updatedTask) => {\r\n      setTasks(prev => prev.map(task => \r\n        task.id === updatedTask.id ? updatedTask : task\r\n      ));\r\n      if (updatedTask.completed) {\r\n        notifyUser(`Task completed: ${updatedTask.title}`, 'success');\r\n      }\r\n    });\r\n\r\n    socket.on('task-deleted', (data) => {\r\n      setTasks(prev => prev.filter(task => task.id !== data.id));\r\n      notifyUser('Task deleted', 'info');\r\n    });\r\n\r\n    socket.on('collaboration-message', (message) => {\r\n      setCollaborationMessages(prev => [...prev, message]);\r\n    });\r\n\r\n    socket.on('focus-session-started', (data) => {\r\n      notifyUser(`${data.username} started a ${data.duration} minute focus session`, 'info');\r\n    });\r\n\r\n    socket.on('focus-session-completed', (data) => {\r\n      notifyUser(`${data.username} completed their focus session!`, 'success');\r\n    });\r\n\r\n    socket.on('error', (error) => {\r\n      console.error('Socket error:', error);\r\n      notifyUser(error.message, 'error');\r\n    });\r\n\r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('user-joined');\r\n      socket.off('user-left');\r\n      socket.off('active-users');\r\n      socket.off('task-created');\r\n      socket.off('task-updated');\r\n      socket.off('task-deleted');\r\n      socket.off('collaboration-message');\r\n      socket.off('focus-session-started');\r\n      socket.off('focus-session-completed');\r\n      socket.off('error');\r\n    };\r\n  }, []);\r\n\r\n  // Fetch initial data when user logs in\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchTasks();\r\n      fetchStats();\r\n    }\r\n  }, [user]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch('/api/tasks');\r\n      const data = await response.json();\r\n      setTasks(data.tasks || []);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      const response = await fetch(`/api/stats/overview${user ? `?userId=${user.id}` : ''}`);\r\n      const data = await response.json();\r\n      setStats(data.overview || {});\r\n    } catch (error) {\r\n      console.error('Error fetching stats:', error);\r\n    }\r\n  };\r\n\r\n  const handleUserLogin = (userData) => {\r\n    setUser(userData);\r\n    socket.emit('user-join', userData);\r\n  };\r\n\r\n  const handleUserLogout = () => {\r\n    setUser(null);\r\n    setTasks([]);\r\n    setStats({});\r\n    setActiveUsers([]);\r\n    setCollaborationMessages([]);\r\n  };\r\n\r\n  const handleTaskCreate = (taskData) => {\r\n    socket.emit('task-created', { ...taskData, created_by: user.id });\r\n  };\r\n\r\n  const handleTaskUpdate = (taskData) => {\r\n    socket.emit('task-updated', taskData);\r\n  };\r\n\r\n  const handleTaskDelete = (taskId) => {\r\n    socket.emit('task-deleted', taskId);\r\n  };\r\n\r\n  const handleFocusSessionStart = (duration) => {\r\n    socket.emit('focus-session-start', { duration });\r\n  };\r\n\r\n  const handleFocusSessionComplete = (sessionId) => {\r\n    socket.emit('focus-session-complete', { sessionId });\r\n    fetchStats(); // Refresh stats after focus session\r\n  };\r\n\r\n  const handleCollaborationMessage = (message) => {\r\n    socket.emit('collaboration-message', { message });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Connecting to Smart Productivity Dashboard...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return <UserLogin onLogin={handleUserLogin} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header \r\n        user={user} \r\n        activeUsers={activeUsers} \r\n        onLogout={handleUserLogout}\r\n      />\r\n      \r\n      <main className=\"main-content\">\r\n        <div className=\"dashboard-grid\">\r\n          {/* Left Column - Task Management */}\r\n          <div className=\"left-column\">\r\n            <TaskManager\r\n              tasks={tasks}\r\n              user={user}\r\n              activeUsers={activeUsers}\r\n              onTaskCreate={handleTaskCreate}\r\n              onTaskUpdate={handleTaskUpdate}\r\n              onTaskDelete={handleTaskDelete}\r\n            />\r\n          </div>\r\n\r\n          {/* Center Column - Stats and Timer */}\r\n          <div className=\"center-column\">\r\n            <ProductivityStats \r\n              stats={stats} \r\n              userId={user.id}\r\n              onStatsUpdate={fetchStats}\r\n            />\r\n            <FocusTimer\r\n              onSessionStart={handleFocusSessionStart}\r\n              onSessionComplete={handleFocusSessionComplete}\r\n            />\r\n          </div>\r\n\r\n          {/* Right Column - Collaboration */}\r\n          <div className=\"right-column\">\r\n            <CollaborationPanel\r\n              messages={collaborationMessages}\r\n              activeUsers={activeUsers}\r\n              currentUser={user}\r\n              onSendMessage={handleCollaborationMessage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n      {/* Notification container */}\r\n      <div id=\"notification-container\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}