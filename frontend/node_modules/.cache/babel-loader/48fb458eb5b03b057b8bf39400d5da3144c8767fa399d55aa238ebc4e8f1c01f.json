{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development\\\\codefest2k25hackathon\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Components\nimport TaskManager from './components/TaskManager';\nimport ProductivityStats from './components/ProductivityStats';\nimport FocusTimer from './components/FocusTimer';\nimport CollaborationPanel from './components/CollaborationPanel';\nimport UserLogin from './components/UserLogin';\nimport Header from './components/Header';\n\n// Context\nimport { ThemeProvider } from './contexts/ThemeContext';\n\n// Utils\nimport { notifyUser } from './utils/notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [collaborationMessages, setCollaborationMessages] = useState([]);\n  const [stats, setStats] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  // Populate user from OAuth callback query parameters\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const id = params.get('userId');\n    const username = params.get('username');\n    const email = params.get('email');\n    if (id && username) {\n      const userData = {\n        id: parseInt(id, 10),\n        username: decodeURIComponent(username),\n        email: email ? decodeURIComponent(email) : ''\n      };\n      setUser(userData);\n      // Clean URL to remove query params\n      const newParams = new URLSearchParams(params);\n      newParams.delete('userId');\n      newParams.delete('username');\n      newParams.delete('email');\n      const newSearch = newParams.toString();\n      window.history.replaceState({}, '', window.location.pathname + (newSearch ? `?${newSearch}` : ''));\n    }\n  }, []); // Remove user dependency to avoid infinite loop\n\n  // Join socket room when user is set and socket is connected\n  useEffect(() => {\n    console.log('useEffect for user join - user:', user, 'socket connected:', socket.connected);\n    if (user) {\n      if (socket.connected) {\n        console.log('Socket is connected, joining room for user:', user);\n        socket.emit('user-join', user);\n      } else {\n        console.log('Socket not connected, waiting for connection...');\n        // Listen for connection and then join\n        const handleConnect = () => {\n          console.log('Socket connected, now joining room for user:', user);\n          socket.emit('user-join', user);\n          socket.off('connect', handleConnect); // Remove this specific listener\n        };\n        socket.on('connect', handleConnect);\n\n        // Cleanup function\n        return () => {\n          socket.off('connect', handleConnect);\n        };\n      }\n    }\n  }, [user]);\n  useEffect(() => {\n    // Socket event listeners\n    socket.on('connect', () => {\n      console.log('Connected to server');\n      setLoading(false);\n    });\n    socket.on('user-joined', data => {\n      notifyUser(`${data.username} joined the workspace`, 'success');\n    });\n    socket.on('user-left', data => {\n      notifyUser(`${data.username} left the workspace`, 'info');\n    });\n    socket.on('active-users', users => {\n      console.log('Received active users:', users);\n      setActiveUsers(users);\n    });\n    socket.on('task-created', task => {\n      setTasks(prev => [task, ...prev]);\n      notifyUser(`New task created: ${task.title}`, 'success');\n    });\n    socket.on('task-updated', updatedTask => {\n      setTasks(prev => prev.map(task => task.id === updatedTask.id ? updatedTask : task));\n      if (updatedTask.completed) {\n        notifyUser(`Task completed: ${updatedTask.title}`, 'success');\n      }\n    });\n    socket.on('task-deleted', data => {\n      setTasks(prev => prev.filter(task => task.id !== data.id));\n      notifyUser('Task deleted', 'info');\n    });\n    socket.on('collaboration-message', message => {\n      setCollaborationMessages(prev => [...prev, message]);\n    });\n    socket.on('focus-session-started', data => {\n      notifyUser(`${data.username} started a ${data.duration} minute focus session`, 'info');\n    });\n    socket.on('focus-session-completed', data => {\n      notifyUser(`${data.username} completed their focus session!`, 'success');\n    });\n    socket.on('error', error => {\n      console.error('Socket error:', error);\n      notifyUser(error.message, 'error');\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('user-joined');\n      socket.off('user-left');\n      socket.off('active-users');\n      socket.off('task-created');\n      socket.off('task-updated');\n      socket.off('task-deleted');\n      socket.off('collaboration-message');\n      socket.off('focus-session-started');\n      socket.off('focus-session-completed');\n      socket.off('error');\n    };\n  }, []);\n\n  // Fetch initial data when user logs in\n  useEffect(() => {\n    if (user) {\n      fetchTasks();\n      fetchStats();\n    }\n  }, [user]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('/api/tasks');\n      const data = await response.json();\n      setTasks(data.tasks || []);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const fetchStats = async () => {\n    try {\n      const response = await fetch(`/api/stats/overview${user ? `?userId=${user.id}` : ''}`);\n      const data = await response.json();\n      setStats(data.overview || {});\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n    }\n  };\n  const handleUserLogin = userData => {\n    setUser(userData);\n    socket.emit('user-join', userData);\n  };\n  const handleUserLogout = () => {\n    setUser(null);\n    setTasks([]);\n    setStats({});\n    setActiveUsers([]);\n    setCollaborationMessages([]);\n  };\n  const handleTaskCreate = async taskData => {\n    console.log('Creating task:', taskData);\n    try {\n      const response = await fetch('/api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...taskData,\n          created_by: user.id\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // Update local state\n        setTasks(prev => [data.task, ...prev]);\n        // Also emit socket event for real-time updates to other users\n        socket.emit('task-created', {\n          ...taskData,\n          created_by: user.id\n        });\n      } else {\n        console.error('Failed to create task');\n      }\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n  const handleTaskUpdate = async taskData => {\n    console.log('Updating task:', taskData);\n    try {\n      const response = await fetch(`/api/tasks/${taskData.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      });\n      console.log('Update response status:', response.status);\n      if (response.ok) {\n        console.log('Task updated successfully');\n        // Update local state\n        setTasks(prev => prev.map(task => task.id === taskData.id ? {\n          ...task,\n          ...taskData\n        } : task));\n        // Also emit socket event for real-time updates to other users\n        socket.emit('task-updated', taskData);\n      } else {\n        const errorData = await response.text();\n        console.error('Failed to update task:', response.status, errorData);\n      }\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  const handleTaskDelete = async taskId => {\n    console.log('Deleting task:', taskId);\n    try {\n      const response = await fetch(`/api/tasks/${taskId}`, {\n        method: 'DELETE'\n      });\n      console.log('Delete response status:', response.status);\n      if (response.ok) {\n        console.log('Task deleted successfully');\n        // Update local state\n        setTasks(prev => prev.filter(task => task.id !== taskId));\n        // Also emit socket event for real-time updates to other users\n        socket.emit('task-deleted', taskId);\n      } else {\n        const errorData = await response.text();\n        console.error('Failed to delete task:', response.status, errorData);\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleFocusSessionStart = duration => {\n    socket.emit('focus-session-start', {\n      duration\n    });\n  };\n  const handleFocusSessionComplete = sessionId => {\n    socket.emit('focus-session-complete', {\n      sessionId\n    });\n    fetchStats(); // Refresh stats after focus session\n  };\n  const handleCollaborationMessage = message => {\n    socket.emit('collaboration-message', {\n      message\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connecting to Clarity Desk...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      children: /*#__PURE__*/_jsxDEV(UserLogin, {\n        onLogin: handleUserLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        user: user,\n        activeUsers: activeUsers,\n        onLogout: handleUserLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-layout\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"priority-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"primary-panel\",\n              children: /*#__PURE__*/_jsxDEV(TaskManager, {\n                tasks: tasks,\n                user: user,\n                activeUsers: activeUsers,\n                onTaskCreate: handleTaskCreate,\n                onTaskUpdate: handleTaskUpdate,\n                onTaskDelete: handleTaskDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"focus-panel\",\n              children: /*#__PURE__*/_jsxDEV(FocusTimer, {\n                onSessionStart: handleFocusSessionStart,\n                onSessionComplete: handleFocusSessionComplete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"secondary-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"analytics-panel\",\n              children: /*#__PURE__*/_jsxDEV(ProductivityStats, {\n                stats: stats,\n                userId: user.id,\n                onStatsUpdate: fetchStats\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"collaboration-panel\",\n              children: /*#__PURE__*/_jsxDEV(CollaborationPanel, {\n                messages: collaborationMessages,\n                activeUsers: activeUsers,\n                currentUser: user,\n                onSendMessage: handleCollaborationMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"notification-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bcnOzv3KVyuGGxsixOhzS56W1uQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","TaskManager","ProductivityStats","FocusTimer","CollaborationPanel","UserLogin","Header","ThemeProvider","notifyUser","jsxDEV","_jsxDEV","socket","App","_s","user","setUser","tasks","setTasks","activeUsers","setActiveUsers","collaborationMessages","setCollaborationMessages","stats","setStats","loading","setLoading","params","URLSearchParams","window","location","search","id","get","username","email","userData","parseInt","decodeURIComponent","newParams","delete","newSearch","toString","history","replaceState","pathname","console","log","connected","emit","handleConnect","off","on","data","users","task","prev","title","updatedTask","map","completed","filter","message","duration","error","fetchTasks","fetchStats","response","fetch","json","overview","handleUserLogin","handleUserLogout","handleTaskCreate","taskData","method","headers","body","JSON","stringify","created_by","ok","handleTaskUpdate","status","errorData","text","handleTaskDelete","taskId","handleFocusSessionStart","handleFocusSessionComplete","sessionId","handleCollaborationMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onLogout","onTaskCreate","onTaskUpdate","onTaskDelete","onSessionStart","onSessionComplete","userId","onStatsUpdate","messages","currentUser","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Development/codefest2k25hackathon/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './App.css';\r\n\r\n// Components\r\nimport TaskManager from './components/TaskManager';\r\nimport ProductivityStats from './components/ProductivityStats';\r\nimport FocusTimer from './components/FocusTimer';\r\nimport CollaborationPanel from './components/CollaborationPanel';\r\nimport UserLogin from './components/UserLogin';\r\nimport Header from './components/Header';\r\n\r\n// Context\r\nimport { ThemeProvider } from './contexts/ThemeContext';\r\n\r\n// Utils\r\nimport { notifyUser } from './utils/notifications';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [collaborationMessages, setCollaborationMessages] = useState([]);\r\n  const [stats, setStats] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Populate user from OAuth callback query parameters\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const id = params.get('userId');\r\n    const username = params.get('username');\r\n    const email = params.get('email');\r\n    if (id && username) {\r\n      const userData = { \r\n        id: parseInt(id, 10), \r\n        username: decodeURIComponent(username),\r\n        email: email ? decodeURIComponent(email) : ''\r\n      };\r\n      setUser(userData);\r\n      // Clean URL to remove query params\r\n      const newParams = new URLSearchParams(params);\r\n      newParams.delete('userId');\r\n      newParams.delete('username');\r\n      newParams.delete('email');\r\n      const newSearch = newParams.toString();\r\n      window.history.replaceState({}, '', window.location.pathname + (newSearch ? `?${newSearch}` : ''));\r\n    }\r\n  }, []); // Remove user dependency to avoid infinite loop\r\n\r\n  // Join socket room when user is set and socket is connected\r\n  useEffect(() => {\r\n    console.log('useEffect for user join - user:', user, 'socket connected:', socket.connected);\r\n    if (user) {\r\n      if (socket.connected) {\r\n        console.log('Socket is connected, joining room for user:', user);\r\n        socket.emit('user-join', user);\r\n      } else {\r\n        console.log('Socket not connected, waiting for connection...');\r\n        // Listen for connection and then join\r\n        const handleConnect = () => {\r\n          console.log('Socket connected, now joining room for user:', user);\r\n          socket.emit('user-join', user);\r\n          socket.off('connect', handleConnect); // Remove this specific listener\r\n        };\r\n        socket.on('connect', handleConnect);\r\n        \r\n        // Cleanup function\r\n        return () => {\r\n          socket.off('connect', handleConnect);\r\n        };\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    // Socket event listeners\r\n    socket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      setLoading(false);\r\n    });\r\n\r\n    socket.on('user-joined', (data) => {\r\n      notifyUser(`${data.username} joined the workspace`, 'success');\r\n    });\r\n\r\n    socket.on('user-left', (data) => {\r\n      notifyUser(`${data.username} left the workspace`, 'info');\r\n    });\r\n\r\n    socket.on('active-users', (users) => {\r\n      console.log('Received active users:', users);\r\n      setActiveUsers(users);\r\n    });\r\n\r\n    socket.on('task-created', (task) => {\r\n      setTasks(prev => [task, ...prev]);\r\n      notifyUser(`New task created: ${task.title}`, 'success');\r\n    });\r\n\r\n    socket.on('task-updated', (updatedTask) => {\r\n      setTasks(prev => prev.map(task => \r\n        task.id === updatedTask.id ? updatedTask : task\r\n      ));\r\n      if (updatedTask.completed) {\r\n        notifyUser(`Task completed: ${updatedTask.title}`, 'success');\r\n      }\r\n    });\r\n\r\n    socket.on('task-deleted', (data) => {\r\n      setTasks(prev => prev.filter(task => task.id !== data.id));\r\n      notifyUser('Task deleted', 'info');\r\n    });\r\n\r\n    socket.on('collaboration-message', (message) => {\r\n      setCollaborationMessages(prev => [...prev, message]);\r\n    });\r\n\r\n    socket.on('focus-session-started', (data) => {\r\n      notifyUser(`${data.username} started a ${data.duration} minute focus session`, 'info');\r\n    });\r\n\r\n    socket.on('focus-session-completed', (data) => {\r\n      notifyUser(`${data.username} completed their focus session!`, 'success');\r\n    });\r\n\r\n    socket.on('error', (error) => {\r\n      console.error('Socket error:', error);\r\n      notifyUser(error.message, 'error');\r\n    });\r\n\r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('user-joined');\r\n      socket.off('user-left');\r\n      socket.off('active-users');\r\n      socket.off('task-created');\r\n      socket.off('task-updated');\r\n      socket.off('task-deleted');\r\n      socket.off('collaboration-message');\r\n      socket.off('focus-session-started');\r\n      socket.off('focus-session-completed');\r\n      socket.off('error');\r\n    };\r\n  }, []);\r\n\r\n  // Fetch initial data when user logs in\r\n  useEffect(() => {\r\n    if (user) {\r\n      fetchTasks();\r\n      fetchStats();\r\n    }\r\n  }, [user]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await fetch('/api/tasks');\r\n      const data = await response.json();\r\n      setTasks(data.tasks || []);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      const response = await fetch(`/api/stats/overview${user ? `?userId=${user.id}` : ''}`);\r\n      const data = await response.json();\r\n      setStats(data.overview || {});\r\n    } catch (error) {\r\n      console.error('Error fetching stats:', error);\r\n    }\r\n  };\r\n\r\n  const handleUserLogin = (userData) => {\r\n    setUser(userData);\r\n    socket.emit('user-join', userData);\r\n  };\r\n\r\n  const handleUserLogout = () => {\r\n    setUser(null);\r\n    setTasks([]);\r\n    setStats({});\r\n    setActiveUsers([]);\r\n    setCollaborationMessages([]);\r\n  };\r\n\r\n  const handleTaskCreate = async (taskData) => {\r\n    console.log('Creating task:', taskData);\r\n    try {\r\n      const response = await fetch('/api/tasks', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ ...taskData, created_by: user.id }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        // Update local state\r\n        setTasks(prev => [data.task, ...prev]);\r\n        // Also emit socket event for real-time updates to other users\r\n        socket.emit('task-created', { ...taskData, created_by: user.id });\r\n      } else {\r\n        console.error('Failed to create task');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    }\r\n  };\r\n\r\n  const handleTaskUpdate = async (taskData) => {\r\n    console.log('Updating task:', taskData);\r\n    try {\r\n      const response = await fetch(`/api/tasks/${taskData.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(taskData),\r\n      });\r\n\r\n      console.log('Update response status:', response.status);\r\n      \r\n      if (response.ok) {\r\n        console.log('Task updated successfully');\r\n        // Update local state\r\n        setTasks(prev => prev.map(task => \r\n          task.id === taskData.id ? { ...task, ...taskData } : task\r\n        ));\r\n        // Also emit socket event for real-time updates to other users\r\n        socket.emit('task-updated', taskData);\r\n      } else {\r\n        const errorData = await response.text();\r\n        console.error('Failed to update task:', response.status, errorData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating task:', error);\r\n    }\r\n  };\r\n\r\n  const handleTaskDelete = async (taskId) => {\r\n    console.log('Deleting task:', taskId);\r\n    try {\r\n      const response = await fetch(`/api/tasks/${taskId}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      console.log('Delete response status:', response.status);\r\n\r\n      if (response.ok) {\r\n        console.log('Task deleted successfully');\r\n        // Update local state\r\n        setTasks(prev => prev.filter(task => task.id !== taskId));\r\n        // Also emit socket event for real-time updates to other users\r\n        socket.emit('task-deleted', taskId);\r\n      } else {\r\n        const errorData = await response.text();\r\n        console.error('Failed to delete task:', response.status, errorData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  const handleFocusSessionStart = (duration) => {\r\n    socket.emit('focus-session-start', { duration });\r\n  };\r\n\r\n  const handleFocusSessionComplete = (sessionId) => {\r\n    socket.emit('focus-session-complete', { sessionId });\r\n    fetchStats(); // Refresh stats after focus session\r\n  };\r\n\r\n  const handleCollaborationMessage = (message) => {\r\n    socket.emit('collaboration-message', { message });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n  <p>Connecting to Clarity Desk...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <ThemeProvider>\r\n        <UserLogin onLogin={handleUserLogin} />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider>\r\n      <div className=\"App\">\r\n        <Header \r\n          user={user} \r\n          activeUsers={activeUsers} \r\n          onLogout={handleUserLogout}\r\n        />\r\n        \r\n        <main className=\"main-content\">\r\n          <div className=\"dashboard-layout\">\r\n            {/* Priority Section - Task Management and Focus Timer */}\r\n            <section className=\"priority-section\">\r\n              <div className=\"primary-panel\">\r\n                <TaskManager\r\n                  tasks={tasks}\r\n                  user={user}\r\n                  activeUsers={activeUsers}\r\n                  onTaskCreate={handleTaskCreate}\r\n                  onTaskUpdate={handleTaskUpdate}\r\n                  onTaskDelete={handleTaskDelete}\r\n                />\r\n              </div>\r\n              <div className=\"focus-panel\">\r\n                <FocusTimer\r\n                  onSessionStart={handleFocusSessionStart}\r\n                  onSessionComplete={handleFocusSessionComplete}\r\n                />\r\n              </div>\r\n            </section>\r\n\r\n            {/* Secondary Section - Analytics and Collaboration */}\r\n            <section className=\"secondary-section\">\r\n              <div className=\"analytics-panel\">\r\n                <ProductivityStats \r\n                  stats={stats} \r\n                  userId={user.id}\r\n                  onStatsUpdate={fetchStats}\r\n                />\r\n              </div>\r\n              <div className=\"collaboration-panel\">\r\n                <CollaborationPanel\r\n                  messages={collaborationMessages}\r\n                  activeUsers={activeUsers}\r\n                  currentUser={user}\r\n                  onSendMessage={handleCollaborationMessage}\r\n                />\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </main>\r\n\r\n        {/* Notification container */}\r\n        <div id=\"notification-container\"></div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}